---
globs: *.css,*.html,*.js,*.ts,*.jsx,*.tsx
description: Layout and display utilities from foundation display.css
---

# Layout and Display Utilities

Layout utilities are defined in [src/css/foundation/display.css](mdc:src/css/foundation/display.css) and provide comprehensive layout control.

## Grid System

### Flex Row Grid
```css
.flex-row              /* display: flex; flex-flow: row wrap */
.flex-row.wrap-none    /* flex-wrap: nowrap */
.flex-row.justify-*    /* justify-content variations */
.flex-row.align-*      /* align-items variations */
```

### Grid Container
```css
.grid                  /* display: grid */
.grid-cols-1          /* 1 column grid */
.grid-cols-2          /* 2 column grid */  
.grid-cols-3          /* 3 column grid */
.grid-cols-4          /* 4 column grid */
.grid-cols-6          /* 6 column grid */
.grid-cols-12         /* 12 column grid */
```

## Flexbox Utilities

### Flex Container
```css
.flex                 /* display: flex */
.flex-col             /* flex-direction: column */
.flex-row             /* flex-direction: row */
.flex-wrap            /* flex-wrap: wrap */
.flex-nowrap          /* flex-wrap: nowrap */
```

### Justify Content
```css
.justify-start        /* justify-content: flex-start */
.justify-end          /* justify-content: flex-end */
.justify-center       /* justify-content: center */
.justify-between      /* justify-content: space-between */
.justify-around       /* justify-content: space-around */
.justify-evenly       /* justify-content: space-evenly */
```

### Align Items
```css
.items-start          /* align-items: flex-start */
.items-end            /* align-items: flex-end */
.items-center         /* align-items: center */
.items-baseline       /* align-items: baseline */
.items-stretch        /* align-items: stretch */
```

### Flex Item Properties
```css
.flex-1               /* flex: 1 1 0% */
.flex-auto            /* flex: 1 1 auto */
.flex-initial         /* flex: 0 1 auto */
.flex-none            /* flex: none */
.flex-shrink-0        /* flex-shrink: 0 */
.flex-grow            /* flex-grow: 1 */
```

## Display Utilities
```css
.block                /* display: block */
.inline-block         /* display: inline-block */
.inline               /* display: inline */
.hidden               /* display: none */
.table                /* display: table */
.table-cell           /* display: table-cell */
```

## Float Utilities
```css
.float-left           /* float: left */
.float-right          /* float: right */
.float-none           /* float: none */
.clearfix             /* clearfix utility */
```

## Border Utilities
```css
.border               /* 1px solid border */
.border-0             /* no border */
.border-2x            /* 2px border */
.border-4x            /* 4px border */
.border-t             /* top border only */
.border-r             /* right border only */
.border-b             /* bottom border only */
.border-l             /* left border only */
```

## Miscellaneous Utilities
```css
.align-left           /* text-align: left */
.align-center         /* text-align: center */
.align-right          /* text-align: right */
.vertical-top         /* vertical-align: top */
.vertical-middle      /* vertical-align: middle */
.vertical-bottom      /* vertical-align: bottom */
.overflow-hidden      /* overflow: hidden */
.overflow-scroll      /* overflow: scroll */
.overflow-auto        /* overflow: auto */
.relative             /* position: relative */
.absolute             /* position: absolute */
.fixed                /* position: fixed */
.sticky               /* position: sticky */
```

## Height and Width Utilities
```css
.h-100                /* height: 100% */
.w-100                /* width: 100% */
.min-h-screen         /* min-height: 100vh */
.min-h-full           /* min-height: 100% */
```

## SVG Icon Sizing
```css
.icon-xs              /* 12px x 12px */
.icon-sm              /* 16px x 16px */
.icon-md              /* 20px x 20px */
.icon-lg              /* 24px x 24px */
.icon-xl              /* 32px x 32px */
```

## Common Layout Patterns

### Centering Content
```html
<div class="flex items-center justify-center min-h-screen">
  <div>Centered content</div>
</div>
```

### Card Layout
```html
<div class="border rounded p-16 bg-white">
  <h3 class="heading-lg mb-8">Card Title</h3>
  <p class="body-md">Card content</p>
</div>
```

### Navigation Layout
```html
<nav class="flex items-center justify-between p-16 border-b">
  <div class="flex items-center gap-16">
    <span class="heading-md">Logo</span>
  </div>
  <div class="flex items-center gap-24">
    <a href="#" class="body-sm">Link</a>
  </div>
</nav>
```

### Grid Layout
```html
<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-24">
  <div class="border rounded p-16">Item 1</div>
  <div class="border rounded p-16">Item 2</div>
  <div class="border rounded p-16">Item 3</div>
</div>
```

## Best Practices
1. **Use flexbox for 1D layouts** (rows or columns)
2. **Use grid for 2D layouts** (rows and columns)
3. **Combine with spacing utilities** for consistent spacing
4. **Use responsive prefixes** for mobile-first design
5. **Prefer utility classes** over custom CSS for layout